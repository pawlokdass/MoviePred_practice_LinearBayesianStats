theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
g5 <- ggplot(movies_interesting, aes(x=best_pic_win)) +
geom_bar(fill="yellow", alpha = 0.7)+
theme_bw()+
labs(x = "Film won an oscar", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
g6 <- ggplot(movies_interesting, aes(x=best_actor_win)) +
geom_bar(fill="grey", alpha = 0.7)+
theme_bw()+
labs(x = "Actor won an oscar", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
g7 <- ggplot(movies_interesting, aes(x=best_actress_win)) +
geom_bar(fill="red", alpha = 0.7)+
theme_bw()+
labs(x = "Actress won an oscar", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
g8 <- ggplot(movies_interesting, aes(x=best_dir_win)) +
geom_bar(fill="blue", alpha = 0.4)+
theme_bw()+
labs(x = "Director won an oscar", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
grid.arrange(g2, g4, g3, g1, nrow=2, top = "Movie Characteristics")
grid.arrange(g5, g6, g7, g8, nrow =2, top = "Film or Staff involved won an Oscar")
cor(movies$audience_score, movies$imdb_rating)
plot(movies$audience_score, movies$imdb_rating, pch=20) # simple scatter plot
abline(lm(movies$audience_score ~ movies$imdb_rating)) # regression line
library(car)
scatterplot(movies$audience_score ~ movies$imdb_rating) # enhanced scatter plot
library(ggplot2)
ggplot(movies, aes(x=imdb_rating)) +  geom_histogram(fill="lightgreen", alpha = 0.7)+
theme_bw()+ labs(x = "Imdb rating", y= "Count", title = "Distribution of Imdb rating")
ggplot(movies, aes(x=audience_score)) +  geom_histogram(fill="pink", alpha = 0.7)+
theme_bw()+ labs(x = "Audience score", y= "Count", title = "Distribution of RT Audience Score")
library(grid)
library(gridExtra)
library(dplyr)
grid.newpage()
grid.table(movies%>%
summarise(mean = round(mean(imdb_rating), 3),
sd = round(sd(imdb_rating), 3),
median = median(imdb_rating),
IQR = IQR(imdb_rating),
min = min(imdb_rating),
max = max(imdb_rating)))
grid.newpage()
grid.table(movies%>%
summarise(mean = round(mean(audience_score), 3),
sd = round(sd(audience_score), 3),
median = median(audience_score),
IQR = IQR(audience_score),
min = min(audience_score),
max = max(audience_score)))
movies_interesting <- movies %>%
select(title_type, genre, mpaa_rating, imdb_num_votes, best_pic_win, best_actor_win,
best_actress_win, best_dir_win, imdb_rating)
g1<- ggplot(movies_interesting, aes(x=genre)) +
geom_bar(fill="lightblue", alpha = 0.7)+
theme_bw()+
labs(x = "genre", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
g2 <- ggplot(movies_interesting, aes(x=title_type)) +
geom_bar(fill="pink", alpha = 0.7)+
theme_bw()+
labs(x = "Type of movie", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
g3 <- ggplot(movies_interesting, aes(x=mpaa_rating)) +
geom_bar(fill="lightgreen", alpha = 0.7)+
theme_bw()+
labs(x = "MPAA Rating", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
g4 <- ggplot(movies_interesting, aes(x=imdb_num_votes)) +
geom_histogram(binwidth =50000, fill="orange", alpha = 0.7)+
theme_bw()+
labs(x = "Number of votes in Imdb", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
g5 <- ggplot(movies_interesting, aes(x=best_pic_win)) +
geom_bar(fill="yellow", alpha = 0.7)+
theme_bw()+
labs(x = "Film won an oscar", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
g6 <- ggplot(movies_interesting, aes(x=best_actor_win)) +
geom_bar(fill="grey", alpha = 0.7)+
theme_bw()+
labs(x = "Actor won an oscar", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
g7 <- ggplot(movies_interesting, aes(x=best_actress_win)) +
geom_bar(fill="red", alpha = 0.7)+
theme_bw()+
labs(x = "Actress won an oscar", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
g8 <- ggplot(movies_interesting, aes(x=best_dir_win)) +
geom_bar(fill="blue", alpha = 0.4)+
theme_bw()+
labs(x = "Director won an oscar", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
grid.arrange(g2, g4, g3, g1, nrow=2, top = "Movie Characteristics")
grid.arrange(g5, g6, g7, g8, nrow =2, top = "Film or Staff involved won an Oscar")
summary(movies_interesting$imdb_num_votes)
table(movies_interesting$mpaa_rating)
table(movies_interesting$title_type)
table(movies_interesting$genre)
table(movies_interesting$best_pic_win)
table(movies_interesting$best_actress_win)
table(movies_interesting$best_actor_win)
table(movies_interesting$best_dir_win)
movies_interesting <- movies_interesting %>%
filter(title_type == "Feature Film")
p1 <- ggplot(movies_interesting, aes(x=genre, y = imdb_rating, fill=genre))+
geom_boxplot(alpha = 0.7)+
theme_bw()+
labs(x = "genre", y= "Imdb rating")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))+
theme(legend.position="none")
p2 <- ggplot(movies_interesting, aes(x=mpaa_rating, y = imdb_rating, fill=mpaa_rating))+
geom_boxplot(alpha = 0.7)+
theme_bw()+
labs(x = "mpaa_rating", y= "Imdb rating")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))+
theme(legend.position="none")
p3 <- ggplot(movies_interesting, aes(x=imdb_num_votes, y = imdb_rating))+
geom_point(colour = "blue", alpha = 0.5)+
theme_bw()+
geom_smooth()+
labs(x = "Number votes", y= "Imdb rating", fill = "won_oscar")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))+
theme(legend.position="none")
p4 <- ggplot(movies_interesting, aes(x=best_pic_win, y = imdb_rating, fill = best_pic_win))+
geom_boxplot(alpha = 0.7)+
theme_bw()+
labs(x = "Film_won_Oscar", y= "Imdb rating", fill = "best_pic_win")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))+
theme(legend.position="none")
p5 <- ggplot(movies_interesting, aes(x=best_actress_win, y = imdb_rating, fill = best_actress_win))+
geom_boxplot(alpha = 0.7)+
theme_bw()+
labs(x = "Actress_won_Oscar", y= "Imdb rating", fill = "best_actress_win")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))+
theme(legend.position="none")
p6 <- ggplot(movies_interesting, aes(x=best_actor_win, y = imdb_rating, fill = best_actor_win))+
geom_boxplot(alpha = 0.7)+
theme_bw()+
labs(x = "Actor_won_Oscar", y= "Imdb rating", fill = "best_actor_win")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))+
theme(legend.position="none")
p7 <- ggplot(movies_interesting, aes(x=best_dir_win, y = imdb_rating, fill = best_dir_win))+
geom_boxplot(alpha = 0.7)+
theme_bw()+
labs(x = "Director_won_Oscar", y= "Imdb rating", fill = "best_dir_win")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))+
theme(legend.position="none")
grid.arrange(p3, p4, p7, p5, p6, nrow = 3)
grid.arrange(p5, p6, nrow =1)
zoo <- data.frame(genre="Comedy", mpaa_rating="PG", best_dir_win="yes",
log_votes = log(345340))
predict_1 <- predict(step2_model, zoo, interval="predict")
imdb_rating_predictions <- c(8.0, 7.8)
predictions <- data.frame("Movie" = "Zootropolis",
"Predicted rating" = sprintf("%2.1f", predict_1[1]),
"95% CI" = sprintf("%2.1f-%2.1f", predict_1[2], predict_1[3]),
"IMDb rating" = imdb_rating_predictions[1])
predictions
load(file='movies.Rdata', verbose = T)
movies <- movies%>%
mutate(feature_film = factor(ifelse(title_type == 'Feature Film', 'yes', 'no')))
movies <- movies%>%
mutate(drama = factor(ifelse(genre == 'Drama', 'yes', 'no')))
movies <- movies%>%
mutate(mpaa_rating_R = factor(ifelse(mpaa_rating == 'R', 'yes', 'no')))
movies <- movies%>%
mutate(oscar_season = factor(ifelse(thtr_rel_month == 10|
thtr_rel_month == 11|
thtr_rel_month == 12,
'yes', 'no')))
movies <- movies%>%
mutate(summer_season = factor(ifelse(thtr_rel_month == 5|
thtr_rel_month == 6|
thtr_rel_month == 7|
thtr_rel_month == 8,
'yes', 'no')))
ggplot(movies, aes(x=audience_score, y=imdb_rating))+
theme_minimal()+
geom_point()+
geom_smooth(method = lm)+
labs(x = "Score in Rotten Tomatoes", y = "Rating in Imdb")
cor(movies$audience_score, movies$imdb_rating)
plot(movies$audience_score, movies$imdb_rating, pch=20) # simple scatter plot
abline(lm(movies$audience_score ~ movies$imdb_rating)) # regression line
library(car)
scatterplot(movies$audience_score ~ movies$imdb_rating) # enhanced scatter plot
library(ggplot2)
ggplot(movies, aes(x=imdb_rating)) +  geom_histogram(fill="lightgreen", alpha = 0.7)+
theme_bw()+ labs(x = "Imdb rating", y= "Count", title = "Distribution of Imdb rating")
ggplot(movies, aes(x=audience_score)) +  geom_histogram(fill="pink", alpha = 0.7)+
theme_bw()+ labs(x = "Audience score", y= "Count", title = "Distribution of RT Audience Score")
library(grid)
library(gridExtra)
library(dplyr)
grid.newpage()
grid.table(movies%>%
summarise(mean = round(mean(imdb_rating), 3),
sd = round(sd(imdb_rating), 3),
median = median(imdb_rating),
IQR = IQR(imdb_rating),
min = min(imdb_rating),
max = max(imdb_rating)))
grid.newpage()
grid.table(movies%>%
summarise(mean = round(mean(audience_score), 3),
sd = round(sd(audience_score), 3),
median = median(audience_score),
IQR = IQR(audience_score),
min = min(audience_score),
max = max(audience_score)))
movies_interesting <- movies %>%
select(title_type, genre, mpaa_rating, imdb_num_votes, best_pic_win, best_actor_win,
best_actress_win, best_dir_win, imdb_rating)
g1<- ggplot(movies_interesting, aes(x=genre)) +
geom_bar(fill="lightblue", alpha = 0.7)+
theme_bw()+
labs(x = "genre", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
g2 <- ggplot(movies_interesting, aes(x=title_type)) +
geom_bar(fill="pink", alpha = 0.7)+
theme_bw()+
labs(x = "Type of movie", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
g3 <- ggplot(movies_interesting, aes(x=mpaa_rating)) +
geom_bar(fill="lightgreen", alpha = 0.7)+
theme_bw()+
labs(x = "MPAA Rating", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
g4 <- ggplot(movies_interesting, aes(x=imdb_num_votes)) +
geom_histogram(binwidth =50000, fill="orange", alpha = 0.7)+
theme_bw()+
labs(x = "Number of votes in Imdb", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
g5 <- ggplot(movies_interesting, aes(x=best_pic_win)) +
geom_bar(fill="yellow", alpha = 0.7)+
theme_bw()+
labs(x = "Film won an oscar", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
g6 <- ggplot(movies_interesting, aes(x=best_actor_win)) +
geom_bar(fill="grey", alpha = 0.7)+
theme_bw()+
labs(x = "Actor won an oscar", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
g7 <- ggplot(movies_interesting, aes(x=best_actress_win)) +
geom_bar(fill="red", alpha = 0.7)+
theme_bw()+
labs(x = "Actress won an oscar", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
g8 <- ggplot(movies_interesting, aes(x=best_dir_win)) +
geom_bar(fill="blue", alpha = 0.4)+
theme_bw()+
labs(x = "Director won an oscar", y= "Count")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))
grid.arrange(g2, g4, g3, g1, nrow=2, top = "Movie Characteristics")
grid.arrange(g5, g6, g7, g8, nrow =2, top = "Film or Staff involved won an Oscar")
summary(movies_interesting$imdb_num_votes)
table(movies_interesting$mpaa_rating)
table(movies_interesting$title_type)
table(movies_interesting$genre)
table(movies_interesting$best_pic_win)
table(movies_interesting$best_actress_win)
table(movies_interesting$best_actor_win)
table(movies_interesting$best_dir_win)
movies_interesting <- movies_interesting %>%
filter(title_type == "Feature Film")
p1 <- ggplot(movies_interesting, aes(x=genre, y = imdb_rating, fill=genre))+
geom_boxplot(alpha = 0.7)+
theme_bw()+
labs(x = "genre", y= "Imdb rating")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))+
theme(legend.position="none")
p2 <- ggplot(movies_interesting, aes(x=mpaa_rating, y = imdb_rating, fill=mpaa_rating))+
geom_boxplot(alpha = 0.7)+
theme_bw()+
labs(x = "mpaa_rating", y= "Imdb rating")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))+
theme(legend.position="none")
p3 <- ggplot(movies_interesting, aes(x=imdb_num_votes, y = imdb_rating))+
geom_point(colour = "blue", alpha = 0.5)+
theme_bw()+
geom_smooth()+
labs(x = "Number votes", y= "Imdb rating", fill = "won_oscar")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))+
theme(legend.position="none")
p4 <- ggplot(movies_interesting, aes(x=best_pic_win, y = imdb_rating, fill = best_pic_win))+
geom_boxplot(alpha = 0.7)+
theme_bw()+
labs(x = "Film_won_Oscar", y= "Imdb rating", fill = "best_pic_win")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))+
theme(legend.position="none")
p5 <- ggplot(movies_interesting, aes(x=best_actress_win, y = imdb_rating, fill = best_actress_win))+
geom_boxplot(alpha = 0.7)+
theme_bw()+
labs(x = "Actress_won_Oscar", y= "Imdb rating", fill = "best_actress_win")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))+
theme(legend.position="none")
p6 <- ggplot(movies_interesting, aes(x=best_actor_win, y = imdb_rating, fill = best_actor_win))+
geom_boxplot(alpha = 0.7)+
theme_bw()+
labs(x = "Actor_won_Oscar", y= "Imdb rating", fill = "best_actor_win")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))+
theme(legend.position="none")
p7 <- ggplot(movies_interesting, aes(x=best_dir_win, y = imdb_rating, fill = best_dir_win))+
geom_boxplot(alpha = 0.7)+
theme_bw()+
labs(x = "Director_won_Oscar", y= "Imdb rating", fill = "best_dir_win")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))+
theme(legend.position="none")
grid.arrange(p3, p4, p7, p5, p6, nrow = 3)
grid.arrange(p5, p6, nrow =1)
library(plyr)
ddply(movies_interesting,~best_dir_win,summarise,mean=mean(imdb_rating),sd=sd(imdb_rating))
ddply(movies_interesting,~best_pic_win,summarise,mean=mean(imdb_rating),sd=sd(imdb_rating))
movies_interesting <- movies_interesting %>% mutate(log_votes = log(imdb_num_votes))
ggplot(movies, aes(x=imdb_num_votes)) +  geom_histogram(fill="lightgreen", alpha = 0.7)+
theme_bw()+ labs(x = "Imdb num of votes", y= "Count", title = "Distribution of Imdb num of votes")
ggplot(movies_interesting, aes(x=log_votes)) +  geom_histogram(fill="green", alpha = 0.7)+
theme_bw()+ labs(x = "Imdb num of votes (log)", y= "Count", title = "Distribution of Imdb num of votes (log)")
movies_interesting <- movies_interesting%>%
mutate(main_oscar_win = ifelse(best_actor_win == 'yes' | best_actress_win == 'yes', 'yes', 'no'))
movies_interesting <- movies_interesting%>%
select(-c(best_actor_win, best_actress_win))
fullmodel <- lm(imdb_rating ~ genre+best_pic_win+best_dir_win+main_oscar_win+log_votes+mpaa_rating,
data = movies_interesting)
summary(fullmodel)
step1_model <- lm(imdb_rating ~ genre+best_pic_win+best_dir_win+log_votes+mpaa_rating,
data = movies_interesting)
summary(step1_model)
step2_model <- lm(imdb_rating ~ genre+best_dir_win+log_votes+mpaa_rating,
data = movies_interesting)
summary(step2_model)
library(car)
car::vif(step2_model)
library(broom)
ggplot(augment(step2_model), aes(x = movies_interesting$log_votes, y = .resid))+
geom_point(colour = "red", size = 2, alpha = 0.5)+
theme_classic()+
geom_smooth(se=FALSE)+
labs(x = "log(number of votes)", y= "residuals")+
geom_hline(yintercept = 0, linetype = "dashed")
par(mfrow=c(1,2))
hist(step2_model$residuals, main = "Residual Distribution",
xlab = "Residuals", col = "lightgreen")
qqnorm(step2_model$residuals, col = "blue")
qqline(step2_model$residuals, col = "red")
ggplot(augment(step2_model), aes(x= .fitted, y= .resid))+
geom_point(colour = "blue", size = 2, alpha = 0.5)+
theme_classic()+
geom_smooth()+
geom_hline(yintercept = 0, linetype = "dashed")+
labs(x = "Fitted", y = "Residuals")
ggplot(augment(step2_model), aes(x = seq_along(.resid), y = .resid)) +
geom_point(colour = "lightgreen", size = 2.5, alpha = 0.6)+
theme_classic()+
labs(x = "Order of Collection", y = "Residuals", title = "Residuals vs. Order of Collection")
zoo <- data.frame(genre="Comedy", mpaa_rating="PG", best_dir_win="yes",
log_votes = log(345340))
predict_1 <- predict(step2_model, zoo, interval="predict")
imdb_rating_predictions <- c(8.0, 7.8)
predictions <- data.frame("Movie" = "Zootropolis",
"Predicted rating" = sprintf("%2.1f", predict_1[1]),
"95% CI" = sprintf("%2.1f-%2.1f", predict_1[2], predict_1[3]),
"IMDb rating" = imdb_rating_predictions[1])
predictions
summary(predict_1)
movies_final <- movies%>%
select(feature_film, drama, runtime, mpaa_rating_R,
thtr_rel_year, oscar_season, summer_season, imdb_rating,
imdb_num_votes, critics_score, best_pic_nom, best_pic_win,
best_actor_win, best_actress_win, best_dir_win, top200_box)
movies_final <- movies%>%
select(feature_film, drama, runtime, mpaa_rating_R,
thtr_rel_year, oscar_season, summer_season, imdb_rating,
imdb_num_votes, critics_score, best_pic_nom, best_pic_win,
best_actor_win, best_actress_win, best_dir_win, top200_box)
p1 <- ggplot(movies_final, aes(x=feature_film, y = imdb_rating, fill=feature_film))+
geom_boxplot(alpha = 0.7)+
theme_minimal()+
scale_fill_brewer(palette="Set2")+
labs(x = "Feature Film", y= "imdb_rating")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))+
theme(legend.position="none")
p2 <- ggplot(movies_final, aes(x=drama, y = imdb_rating, fill=drama))+
geom_boxplot(alpha = 0.7)+
theme_minimal()+
scale_fill_brewer(palette="Set3")+
labs(x = "Drama", y= "imdb_rating")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))+
theme(legend.position="none")
p3<- ggplot(movies_final, aes(x=mpaa_rating_R, y = imdb_rating, fill=mpaa_rating_R))+
geom_boxplot(alpha = 0.7)+
theme_minimal()+
scale_fill_brewer(palette="Set1")+
labs(x = "MPAA Rating R", y= "imdb_rating")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))+
theme(legend.position="none")
p4 <- ggplot(movies_final, aes(x=oscar_season, y = imdb_rating, fill=oscar_season))+
geom_boxplot(alpha = 0.7)+
theme_minimal()+
scale_fill_brewer(palette="Dark2")+
labs(x = "Oscar season", y= "imdb_rating")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))+
theme(legend.position="none")
p5 <- ggplot(movies_final, aes(x=summer_season, y = imdb_rating, fill=summer_season))+
geom_boxplot(alpha = 0.7)+
theme_minimal()+
scale_fill_brewer(palette="RdBu")+
labs(x = "Summer season", y= "imdb_rating")+
theme(axis.text.x=element_text(angle=90, hjust = 1, vjust = 0))+
theme(legend.position="none")
grid.arrange(p1, p2, p3, p4, p5, nrow = 3)
table_feature <- movies_final %>%
tbl_df%>%
group_by(feature_film)%>%
dplyr::summarize(n = n(), Mean = mean(round(mean(imdb_rating), 2)), Sd = sd(imdb_rating))
pandoc.table(table_feature)
library(pander)
install.packages("pander")
library(pander)
table_feature <- movies_final %>%
tbl_df%>%
group_by(feature_film)%>%
dplyr::summarize(n = n(), Mean = mean(round(mean(imdb_rating), 2)), Sd = sd(imdb_rating))
pandoc.table(table_feature)
library(pander)
table_feature <- movies_final %>%
#tbl_df%>%
group_by(feature_film)%>%
dplyr::summarize(n = n(), Mean = mean(round(mean(imdb_rating), 2)), Sd = sd(imdb_rating))
pandoc.table(table_feature)
library(pander)
table_feature <- movies_final %>%
#tbl_df%>%
#group_by(feature_film)%>%
dplyr::summarize(n = n(), Mean = mean(round(mean(imdb_rating), 2)), Sd = sd(imdb_rating))
pandoc.table(table_feature)
library(pander)
table_feature <- movies_final %>%
#tbl_df%>%
group_by(feature_film)%>%
dplyr::summarize(n = n(), Mean = mean(round(mean(imdb_rating), 2)), Sd = sd(imdb_rating))
pandoc.table(table_feature)
library(pander)
table_feature <- movies_final %>%
tbl_df%>%
group_by(feature_film)%>%
dplyr::summarize(n = n(), Mean = mean(round(mean(imdb_rating), 2)), Sd = sd(imdb_rating))
pandoc.table(table_feature)
View(table_feature)
table_drama <- movies_final %>%
tbl_df%>%
group_by(drama)%>%
dplyr::summarize(n = n(), Mean = mean(round(mean(imdb_rating), 2)), Sd = sd(imdb_rating))
pandoc.table(table_drama)
table_rating <- movies_final %>%
tbl_df%>%
group_by(mpaa_rating_R)%>%
dplyr::summarize(n = n(), Mean = mean(round(mean(imdb_rating), 2)), Sd = sd(imdb_rating))
pandoc.table(table_rating)
table_oscar <- movies_final %>%
tbl_df%>%
group_by(oscar_season)%>%
dplyr::summarize(n = n(), Mean = mean(round(mean(imdb_rating), 2)), Sd = sd(imdb_rating))
pandoc.table(table_oscar)
table_summer <- movies_final %>%
tbl_df%>%
group_by(summer_season)%>%
dplyr::summarize(n = n(), Mean = mean(round(mean(imdb_rating), 2)), Sd = sd(imdb_rating))
pandoc.table(table_summer)
View(movies_final)
movies_final <- movies_final %>%
filter(complete.cases(.))
movies_bas <- bas.lm(imdb_rating ~ .,
data = movies_final,
method = "MCMC",
prior = "ZS-null",
modelprior = uniform())
install.packages("BAS")
library(BAS)
movies_bas <- bas.lm(imdb_rating ~ .,
data = movies_final,
method = "MCMC",
prior = "ZS-null",
modelprior = uniform())
movies_bas
summary(movies_bas)
image(movies_bas, rotate=F)
image(movies_bas, rotate=T)
image(movies_bas, rotate=F)
coef_movies <- coef(movies_bas)
par(mfrow=c(3,2))
plot(coef_movies, subset = c(1, 2, 3, 4, 9, 10), ask=F)
confint(coef_movies)
plot(movies_bas, which = 1, ask=F)
plot(movies_bas, which = 2, ask=F)
plot(movies_bas, which = 3, ask=F)
plot(movies_bas, which = 4, ask=F, cex.lab=0.5)
zootropolis <- data.frame(feature_film = "yes", drama="no",
runtime=108, mpaa_rating_R = "no",
thtr_rel_year = 2016, oscar_season = "no",
summer_season = "no",
imdb_num_votes = 345433, critics_score=98,
best_pic_nom = "yes", best_pic_win = "yes",
best_actor_win = "no", best_actress_win = "no",
best_dir_win = "yes", top200_box = "no")
predict_1 <- predict(movies_bas, zootropolis, estimator="BMA", interval = "predict", se.fit=TRUE)
data.frame('Movie' = 'Zootropolis',
'Estimated IMDB rating' = predict_1$Ybma,
'Real IMDB rating' = 8.0)
